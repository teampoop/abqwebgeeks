<?php

function abqwebgeeks_menu() {
  $items = array();
  $items['admin/content/abqwebgeeks-import'] = array(
    'title' => 'Eventbrite Import',
    'page callback' => 'abqwebgeeks_import',
    'access callback' => TRUE,
  );

  return $items;
}

function abqwebgeeks_import() {
  include_once libraries_get_path('eventbrite') . '/Eventbrite.php';
  $authentication_tokens = array('app_key'  => variable_get('eventbrite_app_key'),
                                 'user_key' => variable_get('eventbrite_user_key'));
  $eb_client = new Eventbrite( $authentication_tokens );
  $events = $eb_client->user_list_events();
  $out = array('<b>Eventbrite content Imported!</b>');
  foreach($events->events as $event) {

    $event = $event->event;
    $venue = $event->venue;
    $location = array(
      'name' => $venue->name,
      'street' => $venue->address,
      'additional' => $venue->address_2,
      'city' => $venue->city,
      'province' => $venue->region,
      'postal_code' => $venue->postal_code,
      'country' => strtolower($venue->country_code),
      'latitude' => $venue->latitude,
      'longitude' => $venue->longitude,
    );

    $id = $event->id;
    $efq = new EntityFieldQuery();
    $r = $efq->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'webgeek_event')
      ->fieldCondition('field_eventbright_id', 'value', $id)
      ->execute();
    if(isset($r['node'])) {
      $out[] = $event->title . ' exists. skipping.';
      continue;
    }
    $node = new stdClass();
    $node->type = 'webgeek_event';
    $node->language = LANGUAGE_NONE;
    node_object_prepare($node);
    $node->field_eventbright_id[LANGUAGE_NONE][0]['value'] = $id;

    $node->title = $event->title;
    $node->body[LANGUAGE_NONE][0] = array(
      'value' => $event->description,
      'format' => 'filtered_html',
    );
    $node->field_date_and_time[LANGUAGE_NONE][0] = array(
      'value' => strtotime($event->start_date),
      'value2' => strtotime($event->end_date),
    );
    $node->locations[0] = $location;
    $node->field_eventbrite_url[LANGUAGE_NONE][0]['value'] = $event->url;
    $node->path['pathauto'] = TRUE;
    node_save($node);
    $out[] =  $node->nid . ' has been created';
  }
  drupal_set_message(implode('<br/>', $out));
  drupal_goto();
}